const fs = require('fs')
const glob = require('glob')
const { resolve, basename } = require('path')

// to parse component files that use import statements
require('./babel-register')

// page template
const template = require('./template').default

// get all doc files
const files = glob.sync('src/components/*.doc.js').map(file => resolve(file))
const components = []

files.map(file => {
  const { name } = require(file).default // component name
  const docFile = basename(file) // doc file
  const componentFile = docFile.replace('.doc.js', '.js') // component file

  // generate page and write to file
  const page = template(name, componentFile, docFile)
  fs.writeFileSync(`src/docs/pages/${name.toLowerCase()}.js`, page)

  // push into a list of components
  components.push(
    `{ name: '${name}', module: require('./${name.toLowerCase()}').default }`
  )
  return file
})

// generate _components file
fs.writeFileSync(
  'src/docs/pages/_components.js',
  `/* This file is autogenerated, please do not overwrite this */

    export default [${components.join(',')}]
  `
)
